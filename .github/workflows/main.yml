name: Planet App CI/CD

on:
  push:
    branches:
      - main

jobs:
  build-push-deploy:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout repository
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2. Verify secrets
      - name: Verify required secrets
        run: |
          echo "Checking secrets..."
          missing=false
          if [ -z "${{ secrets.DOCKER_USERNAME }}" ]; then echo "ERROR: DOCKER_USERNAME is missing in GitHub secrets"; missing=true; fi
          if [ -z "${{ secrets.DOCKER_PASSWORD }}" ]; then echo "ERROR: DOCKER_PASSWORD is missing in GitHub secrets"; missing=true; fi
          if [ -z "${{ secrets.EC2_HOST }}" ]; then echo "ERROR: EC2_HOST is missing in GitHub secrets"; missing=true; fi
          if [ -z "${{ secrets.EC2_USER }}" ]; then echo "ERROR: EC2_USER is missing in GitHub secrets"; missing=true; fi
          if [ -z "${{ secrets.EC2_KEY }}" ]; then echo "ERROR: EC2_KEY is missing in GitHub secrets"; missing=true; fi
          if [ "$missing" = true ]; then exit 1; fi
          echo "All required secrets are available."

      # 3. Log in to Docker Hub
      - name: Docker Hub Login
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # 4. Build and push Docker image
      - name: Build and Push Docker Image
        run: |
          echo "Building Docker image..."
          docker build -t ${{ secrets.DOCKER_USERNAME }}/planet-app2:latest .
          echo "Pushing image to Docker Hub..."
          docker push ${{ secrets.DOCKER_USERNAME }}/planet-app2:latest

      # 5. Save EC2 private key
      - name: Save EC2 SSH key
        run: |
          echo "Setting up EC2 SSH key..."
          echo "${{ secrets.EC2_KEY }}" > ec2_key.pem
          chmod 600 ec2_key.pem

      # 6. Deploy container on EC2
      - name: Deploy to EC2
        run: |
          echo "Deploying to EC2..."
          ssh -o StrictHostKeyChecking=no -i ec2_key.pem ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} "
            docker pull ${{ secrets.DOCKER_USERNAME }}/planet-app2:latest &&
            docker stop planet-app2 || true &&
            docker rm planet-app2 || true &&
            docker run -d -p 80:80 --name planet-app2 ${{ secrets.DOCKER_USERNAME }}/planet-app2:latest
          "
